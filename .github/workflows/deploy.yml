# name: Deploy to GKE

# on:
#   push:
#     branches:
#       - main  # Trigger the pipeline on push to the main branch
#   pull_request:
#     branches:
#       - main  # Optionally, trigger the pipeline on pull requests to main

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest  # GitHub-hosted runner
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3  # Use latest stable version of actions/checkout

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v2  # Set up Buildx for multi-platform builds
#         with:
#           version: latest

#       - name: Log in to Google Container Registry
#         uses: google-github-actions/auth@v0.8.0  # Authenticate with GCP
#         with:
#           credentials_json: ${{ secrets.GCP_CREDENTIALS }}  # Add your GCP credentials to GitHub secrets

#       - name: Build and push Docker image
#         run: |
#           docker buildx build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest .
#           docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest

#       - name: Set up GKE kubeconfig
#         uses: google-github-actions/setup-gcloud@v0.5.0  # Set up Google Cloud SDK
#         with:
#           project_id: ${{ secrets.GCP_PROJECT_ID }}

#       - name: Deploy to GKE
#         run: |
#           kubectl set image deployment/flask-app flask-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest
#           kubectl rollout status deployment/flask-app


name: 🚀 Deploy to GKE

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  actions: write
  contents: read

jobs:
  lint:
    name: ⬣ Lint Python Code
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        
      - name: 📥 Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Use the appropriate Python version

      - name: 🔬 Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
        
      - name: 🔬 Lint Python code
        run: |
          source venv/bin/activate
          pylint **/*.py  # Adjust based on your linter setup

  build:
    name: 🛠️ Build Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        
      - name: 📥 Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: 🔨 Build Docker image
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          docker buildx build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest

  deploy_staging:
    name: 🚀 Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build]  # Only deploy after the build step is successful
    if: ${{ github.ref == 'refs/heads/dev' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🛠 Set up GKE kubeconfig
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          
      - name: 🚀 Deploy to GKE Staging
        run: |
          kubectl set image deployment/flask-app flask-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest
          kubectl rollout status deployment/flask-app

  deploy_production:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build]  # Only deploy after the build step is successful
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🛠 Set up GKE kubeconfig
        uses: google-github-actions/setup-gcloud@v0.5.0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          
      - name: 🚀 Deploy to GKE Production
        run: |
          kubectl set image deployment/flask-app flask-app=gcr.io/${{ secrets.GCP_PROJECT_ID }}/flask-app:latest
          kubectl rollout status deployment/flask-app
